// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[12..14], a=l1,b=l2,c=l3,d=l4,e=l5,f=l6,g=l7,h=l8);
    RAM4K(in=in, load=l1, address=address[0..11], out=w1);
    RAM4K(in=in, load=l2, address=address[0..11], out=w2);
    RAM4K(in=in, load=l3, address=address[0..11], out=w3);
    RAM4K(in=in, load=l4, address=address[0..11], out=w4);
    RAM4K(in=in, load=l5, address=address[0..11], out=w5);
    RAM4K(in=in, load=l6, address=address[0..11], out=w6);
    RAM4K(in=in, load=l7, address=address[0..11], out=w7);
    RAM4K(in=in, load=l8, address=address[0..11], out=w8);
    //Pipe the proper register's out value based on the given address
    Mux8Way16(a=w1, b=w2, c=w3, d=w4, e=w5, f=w6, g=w7, h=w8, sel=address[12..14], out=out);
}